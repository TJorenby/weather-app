[{"/Users/tylerjorenby/job-app-projects/weather-app/src/reportWebVitals.js":"1","/Users/tylerjorenby/job-app-projects/weather-app/src/index.js":"2","/Users/tylerjorenby/job-app-projects/weather-app/src/components/App/App.js":"3","/Users/tylerjorenby/job-app-projects/weather-app/src/components/ForecastEvent/ForecastEvent.js":"4","/Users/tylerjorenby/job-app-projects/weather-app/src/components/CurrentConditions/CurrentConditions.js":"5"},{"size":362,"mtime":1606413608407,"results":"6","hashOfConfig":"7"},{"size":576,"mtime":1606773389082,"results":"8","hashOfConfig":"7"},{"size":6208,"mtime":1606792701515,"results":"9","hashOfConfig":"7"},{"size":483,"mtime":1606777636839,"results":"10","hashOfConfig":"7"},{"size":513,"mtime":1606792458580,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dn8833",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tylerjorenby/job-app-projects/weather-app/src/reportWebVitals.js",[],"/Users/tylerjorenby/job-app-projects/weather-app/src/index.js",[],"/Users/tylerjorenby/job-app-projects/weather-app/src/components/App/App.js",["23"],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\n//Component Imports\nimport ForecastEvent from \"../ForecastEvent/ForecastEvent\";\nimport CurrentConditions from \"../CurrentConditions/CurrentConditions\";\n\n//Style Import\nimport \"./styles/app.css\";\nimport \"./styles/media.css\";\nimport { BsSearch } from \"react-icons/bs\";\n\nfunction App() {\n  const [location, setLocation] = useState(\"Minneapolis MN\");\n  const [weather, setWeather] = useState({});\n  const [threeDayForecast, setThreeDayForecast] = useState([]);\n  const [weatherDisplay, setWeatherDisplay] = useState(\"current\");\n\n  //Runs getWeather on app load\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  //Pulls in weather data from API using Axios and updates values for threeDayForecast and weather\n  const getWeather = () => {\n    Axios({\n      method: \"GET\",\n      url: `http://api.weatherapi.com/v1/forecast.json?key=ae002df183ea43ae892202913202911&q=${location}&days=3`,\n    })\n      .then((res) => {\n        // console.log(\"getWeather res is:\", res.data);\n        setWeather(res.data);\n        setThreeDayForecast(res.data.forecast.forecastday);\n        setLocation(\"\"); // resets Location value to empty string (clearing out the input field)\n      })\n      .catch((err) => {\n        console.error(\" getWeather error is:\", err);\n      });\n  };\n\n  // function is triggered on keyPress (Enter) or on mouseDown (clicking on SpyGlass icon). Runs getWeather and setWeatherDisplay\n  const getWeatherSearch = (event) => {\n    if (event.key === \"Enter\" || event.type === \"mousedown\") {\n      getWeather();\n      setWeatherDisplay(\"current\"); // returns weatherDisplay to \"current\" (its default state)\n    }\n  };\n\n  //Sets className for the \"app\" div, based on current weather conditions. Changing className renders dynamic background images.\n  const setAppClassName = () => {\n    if (typeof weather.location != \"undefined\") {\n      const condition = weather.current.condition.text;\n\n      if (condition.includes(\"Clear\")) {\n        return \"app clear\";\n      }\n\n      if (condition.includes(\"Cloudy\") || condition.includes(\"cloudy\")) {\n        return \"app cloudy\";\n      }\n\n      if (condition.includes(\"overcast\") || condition.includes(\"Overcast\")) {\n        return \"app overcast\";\n      }\n\n      if (condition.includes(\"rain\")) {\n        return \"app rain\";\n      }\n\n      if (\n        condition.includes(\"snow\") ||\n        condition.includes(\"blizzard\") ||\n        condition.includes(\"snow showers\")\n      ) {\n        return \"app snow\";\n      }\n\n      if (\n        condition.includes(\"fog\") ||\n        condition.includes(\"Foggy\") ||\n        condition.includes(\"Mist\")\n      ) {\n        return \"app fog\";\n      }\n\n      return \"app\";\n    }\n  };\n\n  //Test Logs\n  // console.log(\"weather is:\", weather);\n  // console.log(\"threeDayForecast is:\", threeDayForecast);\n  //console.log(\"weatherDisplay is:\", weatherDisplay);\n\n  return (\n    <div className={setAppClassName()}>\n      <main className=\"\">\n        <div className=\"page-box\">\n          <div className=\"header-box\">\n            <div style={{ display: \"flex\" }}>\n              <p style={{ fontWeight: \"400\" }} className=\"logo\">\n                the\n              </p>\n              <p style={{ color: \"#f15f4a\" }} className=\"logo\">\n                Weather\n              </p>\n            </div>\n\n            <div className=\"search-box\">\n              <input\n                type=\"text\"\n                className=\"search-bar\"\n                placeholder=\"Enter A Location\"\n                value={location}\n                onChange={(event) => setLocation(event.target.value)}\n                onKeyPress={getWeatherSearch}\n              />\n\n              <BsSearch className=\"search-btn\" onMouseDown={getWeatherSearch} />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col\">\n              {typeof weather.location != \"undefined\" ? (\n                <div className=\"info-box\">\n                  <h1 className=\"location mb-5\">\n                    {weather.location.name}, {weather.location.region}\n                  </h1>\n\n                  <div className=\"weather-box\">\n                    <label\n                      className={`tabs ${\n                        weatherDisplay === \"current\" ? \"tab-border\" : \"\"\n                      }`}\n                    >\n                      <p>Current Conditions</p>\n                      <input\n                        type=\"radio\"\n                        name=\"weather-type\"\n                        className=\"hide\"\n                        value=\"current\"\n                        checked={weatherDisplay === \"current\"}\n                        onChange={(event) =>\n                          setWeatherDisplay(event.target.value)\n                        }\n                      />\n                    </label>\n                    <label\n                      className={`tabs ${\n                        weatherDisplay === \"threeDay\" ? \"active tab-border\" : \"\"\n                      }`}\n                    >\n                      <div>\n                        <p>Three Day Forecast</p>\n                        <input\n                          type=\"radio\"\n                          name=\"weather-type\"\n                          className=\"hide\"\n                          value=\"threeDay\"\n                          checked={weatherDisplay === \"threeDay\"}\n                          onChange={(event) =>\n                            setWeatherDisplay(event.target.value)\n                          }\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"weather-details-box\">\n                    {weatherDisplay === \"current\" ? (\n                      <CurrentConditions weather={weather} />\n                    ) : (\n                      threeDayForecast.map((item, i) => {\n                        return <ForecastEvent item={item} key={i} />;\n                      })\n                    )}\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tylerjorenby/job-app-projects/weather-app/src/components/ForecastEvent/ForecastEvent.js",[],"/Users/tylerjorenby/job-app-projects/weather-app/src/components/CurrentConditions/CurrentConditions.js",[],{"ruleId":"24","severity":1,"message":"25","line":22,"column":6,"nodeType":"26","endLine":22,"endColumn":8,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [getWeather]",{"range":"31","text":"32"},[680,682],"[getWeather]"]